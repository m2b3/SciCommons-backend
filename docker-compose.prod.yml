services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    environment:
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      # If you choose to use an API Key instead of a Token, specify your email as well
      # - CF_API_EMAIL=user@example.com
      # - CF_API_KEY=YOUR_API_KEY
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/ubuntu/traefik/traefik.yml:/traefik.yml:ro # Path to your traefik.yml file
      - /home/ubuntu/traefik/acme.json:/acme.json # Path to your acme.json file
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=cloudflare"
      - "traefik.http.routers.traefik-secure.tls.domains[0].main=backend.scicommons.org"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  web:
    build: .
    command: >
      sh -c "redis-server --daemonize yes && 
              poetry run python manage.py migrate && 
              poetry run uvicorn myapp.asgi:application --host 0.0.0.0 --port 8000 --workers 2 --proxy-headers"
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /home/ubuntu/logs:/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.entrypoints=http"
      - "traefik.http.routers.web.rule=Host(`backend.scicommons.org`)"
      - "traefik.http.middlewares.web-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.web.middlewares=web-https-redirect"
      - "traefik.http.routers.web-secure.entrypoints=https"
      - "traefik.http.routers.web-secure.rule=Host(`backend.scicommons.org`)"
      - "traefik.http.routers.web-secure.tls=true"
      - "traefik.http.routers.web-secure.service=web"
      - "traefik.http.services.web.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"
    depends_on:
      - redis
      - celery
    env_file:
      - .env.prod

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - proxy

  celery:
    build: .
    command: celery -A myapp worker --loglevel=info --concurrency=5
    depends_on:
      - redis
    networks:
      - proxy
    env_file:
      - .env.prod
    volumes:
      - /home/ubuntu/logs:/logs

networks:
  proxy:
    external: true
    name: proxy-shared
