;; pgbouncer configuration for staging deployment
;; Configuration follows best practices for Django applications

[databases]
;; Database connection configuration
;; This will be configured via environment variables in Docker
scicommons_staging = host=postgres_host port=5432 dbname=db_name user=db_user password=db_password

[pgbouncer]
;; Connection pooling settings - optimized for Django applications
pool_mode = session
listen_port = 6432
listen_addr = *
auth_type = md5
auth_file = /etc/pgbouncer/userlist.txt

;; Connection limits - adjust based on your application needs
max_client_conn = 100
default_pool_size = 20
min_pool_size = 5
reserve_pool_size = 5
reserve_pool_timeout = 5

;; Timeouts and limits
server_reset_query = DISCARD ALL
server_reset_query_always = 0
server_check_delay = 30
server_check_query = select 1
server_lifetime = 3600
server_idle_timeout = 600
client_idle_timeout = 0

;; Logging and monitoring
log_connections = 1
log_disconnections = 1
log_pooler_errors = 1
stats_period = 60

;; Security settings
ignore_startup_parameters = extra_float_digits

;; Administrative settings
admin_users = postgres
stats_users = postgres

;; Performance tuning
tcp_keepalives_idle = 0
tcp_keepalives_interval = 0
tcp_keepalives_count = 0
tcp_socket_buffer = 0
tcp_keepcnt = 0
tcp_keepidle = 0
tcp_keepintvl = 0

;; Application name identification
application_name_add_host = 1